;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::ArmGoal)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'ArmGoal (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::ARMGOAL")
  (make-package "FF_MSGS::ARMGOAL"))

(in-package "ROS")
;;//! \htmlinclude ArmGoal.msg.html


(intern "*ARM_STOP*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_STOP* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_STOP* 0)
(intern "*ARM_DEPLOY*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_DEPLOY* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_DEPLOY* 1)
(intern "*ARM_STOW*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_STOW* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_STOW* 2)
(intern "*ARM_PAN*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_PAN* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_PAN* 3)
(intern "*ARM_TILT*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_TILT* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_TILT* 4)
(intern "*ARM_MOVE*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*ARM_MOVE* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*ARM_MOVE* 5)
(intern "*GRIPPER_SET*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*GRIPPER_SET* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*GRIPPER_SET* 6)
(intern "*GRIPPER_OPEN*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*GRIPPER_OPEN* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*GRIPPER_OPEN* 7)
(intern "*GRIPPER_CLOSE*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*GRIPPER_CLOSE* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*GRIPPER_CLOSE* 8)
(intern "*DISABLE_SERVO*" (find-package "FF_MSGS::ARMGOAL"))
(shadow '*DISABLE_SERVO* (find-package "FF_MSGS::ARMGOAL"))
(defconstant ff_msgs::ArmGoal::*DISABLE_SERVO* 9)
(defclass ff_msgs::ArmGoal
  :super ros::object
  :slots (_command _pan _tilt _gripper ))

(defmethod ff_msgs::ArmGoal
  (:init
   (&key
    ((:command __command) 0)
    ((:pan __pan) 0.0)
    ((:tilt __tilt) 0.0)
    ((:gripper __gripper) 0.0)
    )
   (send-super :init)
   (setq _command (round __command))
   (setq _pan (float __pan))
   (setq _tilt (float __tilt))
   (setq _gripper (float __gripper))
   self)
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:pan
   (&optional __pan)
   (if __pan (setq _pan __pan)) _pan)
  (:tilt
   (&optional __tilt)
   (if __tilt (setq _tilt __tilt)) _tilt)
  (:gripper
   (&optional __gripper)
   (if __gripper (setq _gripper __gripper)) _gripper)
  (:serialization-length
   ()
   (+
    ;; uint8 _command
    1
    ;; float32 _pan
    4
    ;; float32 _tilt
    4
    ;; float32 _gripper
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _command
       (write-byte _command s)
     ;; float32 _pan
       (sys::poke _pan (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _tilt
       (sys::poke _tilt (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _gripper
       (sys::poke _gripper (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _command
     (setq _command (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; float32 _pan
     (setq _pan (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _tilt
     (setq _tilt (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _gripper
     (setq _gripper (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get ff_msgs::ArmGoal :md5sum-) "2132b678d6b320fdf79bc08b99d42769")
(setf (get ff_msgs::ArmGoal :datatype-) "ff_msgs/ArmGoal")
(setf (get ff_msgs::ArmGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# This message describes the ARM action offered by the PERCHING ARM

uint8 command                                 # What to do
uint8 ARM_STOP            = 0                 # Stop the arm (vel = 0)
uint8 ARM_DEPLOY          = 1                 # Deploy the arm
uint8 ARM_STOW            = 2                 # Retract the arm
uint8 ARM_PAN             = 3                 # Pan the arm
uint8 ARM_TILT            = 4                 # Tilt the arm
uint8 ARM_MOVE            = 5                 # Pan and tilt the
uint8 GRIPPER_SET         = 6                 # Set the gripper value
uint8 GRIPPER_OPEN        = 7                 # Open the gripper
uint8 GRIPPER_CLOSE       = 8                 # Close the gripper
uint8 DISABLE_SERVO       = 9                 # Disable the servos

float32 pan                                   # PAN from -90 to +90
float32 tilt                                  # TILT from -120 to +90
float32 gripper                               # SET from 20 to 45


")



(provide :ff_msgs/ArmGoal "2132b678d6b320fdf79bc08b99d42769")


