;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::DockFeedback)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'DockFeedback (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::DOCKFEEDBACK")
  (make-package "FF_MSGS::DOCKFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude DockFeedback.msg.html


(defclass ff_msgs::DockFeedback
  :super ros::object
  :slots (_state ))

(defmethod ff_msgs::DockFeedback
  (:init
   (&key
    ((:state __state) (instance ff_msgs::DockState :init))
    )
   (send-super :init)
   (setq _state __state)
   self)
  (:state
   (&rest __state)
   (if (keywordp (car __state))
       (send* _state __state)
     (progn
       (if __state (setq _state (car __state)))
       _state)))
  (:serialization-length
   ()
   (+
    ;; ff_msgs/DockState _state
    (send _state :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; ff_msgs/DockState _state
       (send _state :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; ff_msgs/DockState _state
     (send _state :deserialize buf ptr-) (incf ptr- (send _state :serialization-length))
   ;;
   self)
  )

(setf (get ff_msgs::DockFeedback :md5sum-) "ab5cbe2d052a7927a3632f11a64bfa27")
(setf (get ff_msgs::DockFeedback :datatype-) "ff_msgs/DockFeedback")
(setf (get ff_msgs::DockFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Feedback
ff_msgs/DockState state


================================================================================
MSG: ff_msgs/DockState
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
# 
# All rights reserved.
# 
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Response for Dock/Undock goals

# Header with timestamp
std_msgs/Header header

# Feedback
int8 state
int8 RECOVERY_SWITCHING_TO_ML_LOC       = 15
int8 RECOVERY_MOVING_TO_APPROACH_POSE   = 14
int8 RECOVERY_WAITING_FOR_SPIN_DOWN     = 13
int8 RECOVERY_SWITCHING_TO_NO_LOC       = 12
int8 INITIALIZING                       = 11
int8 UNKNOWN                            = 10
int8 DOCKING_MAX_STATE                  = 7
int8 DOCKING_SWITCHING_TO_ML_LOC        = 7
int8 DOCKING_MOVING_TO_APPROACH_POSE    = 6
int8 DOCKING_SWITCHING_TO_AR_LOC        = 5
int8 DOCKING_MOVING_TO_COMPLETE_POSE    = 4
int8 DOCKING_CHECKING_ATTACHED          = 3
int8 DOCKING_WAITING_FOR_SPIN_DOWN      = 2
int8 DOCKING_SWITCHING_TO_NO_LOC        = 1
int8 DOCKED                             = 0
int8 UNDOCKING_SWITCHING_TO_ML_LOC      = -1
int8 UNDOCKING_WAITING_FOR_SPIN_UP      = -2
int8 UNDOCKING_MOVING_TO_APPROACH_POSE  = -3
int8 UNDOCKED                           = -4
int8 UNDOCKING_MAX_STATE                = -4

# A human readble version of the (event) -> [state] transition
string fsm_event
string fsm_state
================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

")



(provide :ff_msgs/DockFeedback "ab5cbe2d052a7927a3632f11a64bfa27")


