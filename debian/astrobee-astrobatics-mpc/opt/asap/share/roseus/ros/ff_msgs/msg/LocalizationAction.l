;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::LocalizationAction)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'LocalizationAction (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::LOCALIZATIONACTION")
  (make-package "FF_MSGS::LOCALIZATIONACTION"))

(in-package "ROS")
;;//! \htmlinclude LocalizationAction.msg.html


(defclass ff_msgs::LocalizationAction
  :super ros::object
  :slots (_action_goal _action_result _action_feedback ))

(defmethod ff_msgs::LocalizationAction
  (:init
   (&key
    ((:action_goal __action_goal) (instance ff_msgs::LocalizationActionGoal :init))
    ((:action_result __action_result) (instance ff_msgs::LocalizationActionResult :init))
    ((:action_feedback __action_feedback) (instance ff_msgs::LocalizationActionFeedback :init))
    )
   (send-super :init)
   (setq _action_goal __action_goal)
   (setq _action_result __action_result)
   (setq _action_feedback __action_feedback)
   self)
  (:action_goal
   (&rest __action_goal)
   (if (keywordp (car __action_goal))
       (send* _action_goal __action_goal)
     (progn
       (if __action_goal (setq _action_goal (car __action_goal)))
       _action_goal)))
  (:action_result
   (&rest __action_result)
   (if (keywordp (car __action_result))
       (send* _action_result __action_result)
     (progn
       (if __action_result (setq _action_result (car __action_result)))
       _action_result)))
  (:action_feedback
   (&rest __action_feedback)
   (if (keywordp (car __action_feedback))
       (send* _action_feedback __action_feedback)
     (progn
       (if __action_feedback (setq _action_feedback (car __action_feedback)))
       _action_feedback)))
  (:serialization-length
   ()
   (+
    ;; ff_msgs/LocalizationActionGoal _action_goal
    (send _action_goal :serialization-length)
    ;; ff_msgs/LocalizationActionResult _action_result
    (send _action_result :serialization-length)
    ;; ff_msgs/LocalizationActionFeedback _action_feedback
    (send _action_feedback :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; ff_msgs/LocalizationActionGoal _action_goal
       (send _action_goal :serialize s)
     ;; ff_msgs/LocalizationActionResult _action_result
       (send _action_result :serialize s)
     ;; ff_msgs/LocalizationActionFeedback _action_feedback
       (send _action_feedback :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; ff_msgs/LocalizationActionGoal _action_goal
     (send _action_goal :deserialize buf ptr-) (incf ptr- (send _action_goal :serialization-length))
   ;; ff_msgs/LocalizationActionResult _action_result
     (send _action_result :deserialize buf ptr-) (incf ptr- (send _action_result :serialization-length))
   ;; ff_msgs/LocalizationActionFeedback _action_feedback
     (send _action_feedback :deserialize buf ptr-) (incf ptr- (send _action_feedback :serialization-length))
   ;;
   self)
  )

(setf (get ff_msgs::LocalizationAction :md5sum-) "ec0494140b1dcab54ec73f8ddd70ee1c")
(setf (get ff_msgs::LocalizationAction :datatype-) "ff_msgs/LocalizationAction")
(setf (get ff_msgs::LocalizationAction :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

LocalizationActionGoal action_goal
LocalizationActionResult action_result
LocalizationActionFeedback action_feedback

================================================================================
MSG: ff_msgs/LocalizationActionGoal
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalID goal_id
LocalizationGoal goal

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: actionlib_msgs/GoalID
# The stamp should store the time at which this goal was requested.
# It is used by an action server when it tries to preempt all
# goals that were requested before a certain time
time stamp

# The id provides a way to associate feedback and
# result message with specific goal requests. The id
# specified must be unique.
string id


================================================================================
MSG: ff_msgs/LocalizationGoal
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# This message is the LOCALIZATION action offered by the LOCALIZATION_MANAGER

uint8 command
uint8 COMMAND_UNKNOWN             = 0       # Protect against empty message
uint8 COMMAND_SWITCH_PIPELINE     = 1       # Switch localization pipeline
uint8 COMMAND_RESET_FILTER        = 2       # Reset the filter
uint8 COMMAND_ESTIMATE_BIAS       = 3       # Estimate the bias

string pipeline                             # Only needed for switch pipeline
string PIPELINE_NONE              = no
string PIPELINE_MAP_LANDMARKS     = ml
string PIPELINE_AR_TAGS           = ar
string PIPELINE_HANDRAIL          = hr
string PIPELINE_PERCH             = pl
string PIPELINE_TRUTH             = gt


================================================================================
MSG: ff_msgs/LocalizationActionResult
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalStatus status
LocalizationResult result

================================================================================
MSG: actionlib_msgs/GoalStatus
GoalID goal_id
uint8 status
uint8 PENDING         = 0   # The goal has yet to be processed by the action server
uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                            #   and has since completed its execution (Terminal State)
uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                            #    to some failure (Terminal State)
uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                            #    because the goal was unattainable or invalid (Terminal State)
uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                            #    and has not yet completed execution
uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                            #    but the action server has not yet confirmed that the goal is canceled
uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                            #    and was successfully cancelled (Terminal State)
uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                            #    sent over the wire by an action server

#Allow for the user to associate a string with GoalStatus for debugging
string text


================================================================================
MSG: ff_msgs/LocalizationResult
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

int32 response
int32 PIPELINE_ALREADY_ACTIVE     =  2   # We are already on this mode
int32 SUCCESS                     =  1   # The switch was successful
int32 PREEMPTED                   =  0   # Preempted by another action goal
int32 CANCELLED                   = -1   # We canceled our own request
int32 INVALID_PIPELINE            = -2   # Not a valid pipeline in command
int32 INVALID_COMMAND             = -3   # Not a valid command type
int32 FILTER_NOT_IN_USE           = -4   # Reset/bias requires filter
int32 OPTICAL_FLOW_FAILED         = -5   # Optical flow could not be toggled
int32 PIPELINE_TOGGLE_FAILED      = -6   # Pipeline could not be toggled
int32 PIPELINE_USE_FAILED         = -7   # Pipeline could not be used
int32 PIPELINE_UNSTABLE           = -8   # Pipeline did not go stable
int32 SET_INPUT_FAILED            = -9   # EKF could not be set to new mode
int32 ESTIMATE_BIAS_FAILED        = -10  # Estimate bias service call failed
int32 RESET_FAILED                = -11  # Reset service call failed

# Human readable FSM result for debugging
string fsm_result


================================================================================
MSG: ff_msgs/LocalizationActionFeedback
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalStatus status
LocalizationFeedback feedback

================================================================================
MSG: ff_msgs/LocalizationFeedback
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Feedback
ff_msgs/LocalizationState state


================================================================================
MSG: ff_msgs/LocalizationState
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# The state of the localization system

# Header with timestamp
std_msgs/Header header

# Tee current state
int32 state                                 # Current state
int32 INITIALIZING                    = 0   # Waiting on dependencies
int32 DISABLED                        = 1   # Localization disabled
int32 LOCALIZING                      = 2   # Localization enabled
int32 SWITCH_WAITING_FOR_PIPELINE     = 3   # Waiting for pipeline to stabilize
int32 SWITCH_WAITING_FOR_FILTER       = 4   # Waiting for filter to stabilize
int32 BIAS_WAITING_FOR_FILTER         = 5   # Waiting for bias estimation
int32 RESET_WAITING_FOR_FILTER        = 6   # Waiting for EKF stability
int32 UNSTABLE                        = 7   # Fallback pipeline unstable

# A human readable version of the (event) -> [state] transition
string fsm_event
string fsm_state

# The current localization pipeline being used
ff_msgs/LocalizationPipeline pipeline

================================================================================
MSG: ff_msgs/LocalizationPipeline
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Information about a pipeline

string id                     # Short id for the pipeline
uint8 mode                    # EKF mode for the pipeline
string name                   # Long name for the pipe
bool requires_filter          # Does this pipeline require the EKF
bool requires_optical_flow    # Does this pipeline require optical flow

")



(provide :ff_msgs/LocalizationAction "ec0494140b1dcab54ec73f8ddd70ee1c")


