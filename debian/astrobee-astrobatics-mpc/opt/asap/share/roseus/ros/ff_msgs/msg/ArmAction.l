;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::ArmAction)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'ArmAction (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::ARMACTION")
  (make-package "FF_MSGS::ARMACTION"))

(in-package "ROS")
;;//! \htmlinclude ArmAction.msg.html


(defclass ff_msgs::ArmAction
  :super ros::object
  :slots (_action_goal _action_result _action_feedback ))

(defmethod ff_msgs::ArmAction
  (:init
   (&key
    ((:action_goal __action_goal) (instance ff_msgs::ArmActionGoal :init))
    ((:action_result __action_result) (instance ff_msgs::ArmActionResult :init))
    ((:action_feedback __action_feedback) (instance ff_msgs::ArmActionFeedback :init))
    )
   (send-super :init)
   (setq _action_goal __action_goal)
   (setq _action_result __action_result)
   (setq _action_feedback __action_feedback)
   self)
  (:action_goal
   (&rest __action_goal)
   (if (keywordp (car __action_goal))
       (send* _action_goal __action_goal)
     (progn
       (if __action_goal (setq _action_goal (car __action_goal)))
       _action_goal)))
  (:action_result
   (&rest __action_result)
   (if (keywordp (car __action_result))
       (send* _action_result __action_result)
     (progn
       (if __action_result (setq _action_result (car __action_result)))
       _action_result)))
  (:action_feedback
   (&rest __action_feedback)
   (if (keywordp (car __action_feedback))
       (send* _action_feedback __action_feedback)
     (progn
       (if __action_feedback (setq _action_feedback (car __action_feedback)))
       _action_feedback)))
  (:serialization-length
   ()
   (+
    ;; ff_msgs/ArmActionGoal _action_goal
    (send _action_goal :serialization-length)
    ;; ff_msgs/ArmActionResult _action_result
    (send _action_result :serialization-length)
    ;; ff_msgs/ArmActionFeedback _action_feedback
    (send _action_feedback :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; ff_msgs/ArmActionGoal _action_goal
       (send _action_goal :serialize s)
     ;; ff_msgs/ArmActionResult _action_result
       (send _action_result :serialize s)
     ;; ff_msgs/ArmActionFeedback _action_feedback
       (send _action_feedback :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; ff_msgs/ArmActionGoal _action_goal
     (send _action_goal :deserialize buf ptr-) (incf ptr- (send _action_goal :serialization-length))
   ;; ff_msgs/ArmActionResult _action_result
     (send _action_result :deserialize buf ptr-) (incf ptr- (send _action_result :serialization-length))
   ;; ff_msgs/ArmActionFeedback _action_feedback
     (send _action_feedback :deserialize buf ptr-) (incf ptr- (send _action_feedback :serialization-length))
   ;;
   self)
  )

(setf (get ff_msgs::ArmAction :md5sum-) "e7d0e0fd97a05b48fe09d04a86eb6863")
(setf (get ff_msgs::ArmAction :datatype-) "ff_msgs/ArmAction")
(setf (get ff_msgs::ArmAction :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

ArmActionGoal action_goal
ArmActionResult action_result
ArmActionFeedback action_feedback

================================================================================
MSG: ff_msgs/ArmActionGoal
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalID goal_id
ArmGoal goal

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: actionlib_msgs/GoalID
# The stamp should store the time at which this goal was requested.
# It is used by an action server when it tries to preempt all
# goals that were requested before a certain time
time stamp

# The id provides a way to associate feedback and
# result message with specific goal requests. The id
# specified must be unique.
string id


================================================================================
MSG: ff_msgs/ArmGoal
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# This message describes the ARM action offered by the PERCHING ARM

uint8 command                                 # What to do
uint8 ARM_STOP            = 0                 # Stop the arm (vel = 0)
uint8 ARM_DEPLOY          = 1                 # Deploy the arm
uint8 ARM_STOW            = 2                 # Retract the arm
uint8 ARM_PAN             = 3                 # Pan the arm
uint8 ARM_TILT            = 4                 # Tilt the arm
uint8 ARM_MOVE            = 5                 # Pan and tilt the
uint8 GRIPPER_SET         = 6                 # Set the gripper value
uint8 GRIPPER_OPEN        = 7                 # Open the gripper
uint8 GRIPPER_CLOSE       = 8                 # Close the gripper
uint8 DISABLE_SERVO       = 9                 # Disable the servos

float32 pan                                   # PAN from -90 to +90
float32 tilt                                  # TILT from -120 to +90
float32 gripper                               # SET from 20 to 45


================================================================================
MSG: ff_msgs/ArmActionResult
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalStatus status
ArmResult result

================================================================================
MSG: actionlib_msgs/GoalStatus
GoalID goal_id
uint8 status
uint8 PENDING         = 0   # The goal has yet to be processed by the action server
uint8 ACTIVE          = 1   # The goal is currently being processed by the action server
uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing
                            #   and has since completed its execution (Terminal State)
uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)
uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due
                            #    to some failure (Terminal State)
uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,
                            #    because the goal was unattainable or invalid (Terminal State)
uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing
                            #    and has not yet completed execution
uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,
                            #    but the action server has not yet confirmed that the goal is canceled
uint8 RECALLED        = 8   # The goal received a cancel request before it started executing
                            #    and was successfully cancelled (Terminal State)
uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be
                            #    sent over the wire by an action server

#Allow for the user to associate a string with GoalStatus for debugging
string text


================================================================================
MSG: ff_msgs/ArmResult
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Machine-readable reseult code
int32 response
int32 SUCCESS             =  1                # Successfully completed
int32 PREEMPTED           =  0                # Action was preempted
int32 INVALID_COMMAND     = -1                # Invalid command
int32 BAD_TILT_VALUE      = -2                # Invalid value for tilt
int32 BAD_PAN_VALUE       = -3                # Invalid value for pan
int32 BAD_GRIPPER_VALUE   = -4                # Invalid value for gripper
int32 NOT_ALLOWED         = -5                # Not allowed
int32 TILT_FAILED         = -6                # Tilt command failed
int32 PAN_FAILED          = -7                # Pan command failed
int32 GRIPPER_FAILED      = -8                # Gripper command failed
int32 COMMUNICATION_ERROR = -9                # Cannot communicate with arm
int32 COLLISION_AVOIDED   = -10               # No panning when tilt < 90
int32 ENABLE_FAILED       = -11               # Cannot enable the servos
int32 DISABLE_FAILED      = -12               # Cannot disable the servos
int32 CALIBRATE_FAILED    = -13               # Cannot calibrate the gripper
int32 NO_GOAL             = -14               # Unknown call to calibration

# Human readable FSM result for debugging
string fsm_result


================================================================================
MSG: ff_msgs/ArmActionFeedback
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

Header header
actionlib_msgs/GoalStatus status
ArmFeedback feedback

================================================================================
MSG: ff_msgs/ArmFeedback
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

ff_msgs/ArmState state                        # Complete state

float32 pan                                   # Current PAN value
float32 tilt                                  # Current TILT value
float32 gripper                               # Current GRIPPER value


================================================================================
MSG: ff_msgs/ArmState
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# The state of the arm behavior

# Header with timestamp
std_msgs/Header header

# Tee current state
int8 state                         # Current state
int8 INITIALIZING        = 0       # Waiting on child services, actions, etc.
int8 UNKNOWN             = 1       # Waiting on feedback from driver
int8 STOWED              = 2       # The arm is stowed
int8 DEPLOYED            = 3       # The arm is deployed
int8 SETTING             = 4       # The gripper is being set to a value
int8 PANNING             = 5       # We are panning as part of a move
int8 TILTING             = 6       # We are tilting as part of a move
int8 STOWING_SETTING     = 7       # We are closing the gripper for stowing
int8 STOWING_PANNING     = 8       # We are panning to zero for stowing
int8 STOWING_TILTING     = 9       # We are tilting to zero for stowing
int8 DEPLOYING_PANNING   = 10      # We are panning to zero for stowing
int8 DEPLOYING_TILTING   = 11      # We are tilting to zero for stowing
int8 CALIBRATING         = 12      # We are calibrating the gripper

# A human readble version of the (event) -> [state] transition
string fsm_event
string fsm_state

")



(provide :ff_msgs/ArmAction "e7d0e0fd97a05b48fe09d04a86eb6863")


