;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::LocalizationFeedback)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'LocalizationFeedback (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::LOCALIZATIONFEEDBACK")
  (make-package "FF_MSGS::LOCALIZATIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude LocalizationFeedback.msg.html


(defclass ff_msgs::LocalizationFeedback
  :super ros::object
  :slots (_state ))

(defmethod ff_msgs::LocalizationFeedback
  (:init
   (&key
    ((:state __state) (instance ff_msgs::LocalizationState :init))
    )
   (send-super :init)
   (setq _state __state)
   self)
  (:state
   (&rest __state)
   (if (keywordp (car __state))
       (send* _state __state)
     (progn
       (if __state (setq _state (car __state)))
       _state)))
  (:serialization-length
   ()
   (+
    ;; ff_msgs/LocalizationState _state
    (send _state :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; ff_msgs/LocalizationState _state
       (send _state :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; ff_msgs/LocalizationState _state
     (send _state :deserialize buf ptr-) (incf ptr- (send _state :serialization-length))
   ;;
   self)
  )

(setf (get ff_msgs::LocalizationFeedback :md5sum-) "9a8c4aa9ea2bc31b1a056756dbbcdb96")
(setf (get ff_msgs::LocalizationFeedback :datatype-) "ff_msgs/LocalizationFeedback")
(setf (get ff_msgs::LocalizationFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Feedback
ff_msgs/LocalizationState state


================================================================================
MSG: ff_msgs/LocalizationState
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# The state of the localization system

# Header with timestamp
std_msgs/Header header

# Tee current state
int32 state                                 # Current state
int32 INITIALIZING                    = 0   # Waiting on dependencies
int32 DISABLED                        = 1   # Localization disabled
int32 LOCALIZING                      = 2   # Localization enabled
int32 SWITCH_WAITING_FOR_PIPELINE     = 3   # Waiting for pipeline to stabilize
int32 SWITCH_WAITING_FOR_FILTER       = 4   # Waiting for filter to stabilize
int32 BIAS_WAITING_FOR_FILTER         = 5   # Waiting for bias estimation
int32 RESET_WAITING_FOR_FILTER        = 6   # Waiting for EKF stability
int32 UNSTABLE                        = 7   # Fallback pipeline unstable

# A human readable version of the (event) -> [state] transition
string fsm_event
string fsm_state

# The current localization pipeline being used
ff_msgs/LocalizationPipeline pipeline

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: ff_msgs/LocalizationPipeline
# Copyright (c) 2017, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
#
# All rights reserved.
#
# The Astrobee platform is licensed under the Apache License, Version 2.0
# (the \"License\"); you may not use this file except in compliance with the
# License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Information about a pipeline

string id                     # Short id for the pipeline
uint8 mode                    # EKF mode for the pipeline
string name                   # Long name for the pipe
bool requires_filter          # Does this pipeline require the EKF
bool requires_optical_flow    # Does this pipeline require optical flow

")



(provide :ff_msgs/LocalizationFeedback "9a8c4aa9ea2bc31b1a056756dbbcdb96")


