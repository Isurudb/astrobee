;; Auto-generated. Do not edit!


(when (boundp 'ff_msgs::PerchResult)
  (if (not (find-package "FF_MSGS"))
    (make-package "FF_MSGS"))
  (shadow 'PerchResult (find-package "FF_MSGS")))
(unless (find-package "FF_MSGS::PERCHRESULT")
  (make-package "FF_MSGS::PERCHRESULT"))

(in-package "ROS")
;;//! \htmlinclude PerchResult.msg.html


(intern "*CANCELLED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*CANCELLED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*CANCELLED* 5)
(intern "*ALREADY_PERCHED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*ALREADY_PERCHED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*ALREADY_PERCHED* 4)
(intern "*ALREADY_UNPERCHED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*ALREADY_UNPERCHED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*ALREADY_UNPERCHED* 3)
(intern "*UNPERCHED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*UNPERCHED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*UNPERCHED* 2)
(intern "*PERCHED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*PERCHED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*PERCHED* 1)
(intern "*PREEMPTED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*PREEMPTED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*PREEMPTED* 0)
(intern "*INVALID_COMMAND*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*INVALID_COMMAND* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*INVALID_COMMAND* -1)
(intern "*NOT_IN_UNPERCHED_STATE*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*NOT_IN_UNPERCHED_STATE* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*NOT_IN_UNPERCHED_STATE* -2)
(intern "*NOT_IN_PERCHED_STATE*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*NOT_IN_PERCHED_STATE* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*NOT_IN_PERCHED_STATE* -3)
(intern "*SWITCH_FAILED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*SWITCH_FAILED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*SWITCH_FAILED* -4)
(intern "*MOTION_FAILED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*MOTION_FAILED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*MOTION_FAILED* -5)
(intern "*ARM_FAILED*" (find-package "FF_MSGS::PERCHRESULT"))
(shadow '*ARM_FAILED* (find-package "FF_MSGS::PERCHRESULT"))
(defconstant ff_msgs::PerchResult::*ARM_FAILED* -6)
(defclass ff_msgs::PerchResult
  :super ros::object
  :slots (_response _fsm_result ))

(defmethod ff_msgs::PerchResult
  (:init
   (&key
    ((:response __response) 0)
    ((:fsm_result __fsm_result) "")
    )
   (send-super :init)
   (setq _response (round __response))
   (setq _fsm_result (string __fsm_result))
   self)
  (:response
   (&optional __response)
   (if __response (setq _response __response)) _response)
  (:fsm_result
   (&optional __fsm_result)
   (if __fsm_result (setq _fsm_result __fsm_result)) _fsm_result)
  (:serialization-length
   ()
   (+
    ;; int32 _response
    4
    ;; string _fsm_result
    4 (length _fsm_result)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _response
       (write-long _response s)
     ;; string _fsm_result
       (write-long (length _fsm_result) s) (princ _fsm_result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _response
     (setq _response (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _fsm_result
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _fsm_result (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get ff_msgs::PerchResult :md5sum-) "2036823b5e70e7e2401e3c61a8196cf3")
(setf (get ff_msgs::PerchResult :datatype-) "ff_msgs/PerchResult")
(setf (get ff_msgs::PerchResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Perch result
int32 response
int32 CANCELLED                          = 5
int32 ALREADY_PERCHED                    = 4
int32 ALREADY_UNPERCHED                  = 3
int32 UNPERCHED                          = 2
int32 PERCHED                            = 1
int32 PREEMPTED                          = 0
int32 INVALID_COMMAND                    = -1
int32 NOT_IN_UNPERCHED_STATE             = -2
int32 NOT_IN_PERCHED_STATE               = -3
int32 SWITCH_FAILED                      = -4
int32 MOTION_FAILED                      = -5
int32 ARM_FAILED                         = -6

# Human readable FSM result for debugging
string fsm_result


")



(provide :ff_msgs/PerchResult "2036823b5e70e7e2401e3c61a8196cf3")


