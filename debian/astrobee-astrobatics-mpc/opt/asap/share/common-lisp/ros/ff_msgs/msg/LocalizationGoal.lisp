; Auto-generated. Do not edit!


(cl:in-package ff_msgs-msg)


;//! \htmlinclude LocalizationGoal.msg.html

(cl:defclass <LocalizationGoal> (roslisp-msg-protocol:ros-message)
  ((command
    :reader command
    :initarg :command
    :type cl:fixnum
    :initform 0)
   (pipeline
    :reader pipeline
    :initarg :pipeline
    :type cl:string
    :initform ""))
)

(cl:defclass LocalizationGoal (<LocalizationGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <LocalizationGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'LocalizationGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name ff_msgs-msg:<LocalizationGoal> is deprecated: use ff_msgs-msg:LocalizationGoal instead.")))

(cl:ensure-generic-function 'command-val :lambda-list '(m))
(cl:defmethod command-val ((m <LocalizationGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ff_msgs-msg:command-val is deprecated.  Use ff_msgs-msg:command instead.")
  (command m))

(cl:ensure-generic-function 'pipeline-val :lambda-list '(m))
(cl:defmethod pipeline-val ((m <LocalizationGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ff_msgs-msg:pipeline-val is deprecated.  Use ff_msgs-msg:pipeline instead.")
  (pipeline m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<LocalizationGoal>)))
    "Constants for message type '<LocalizationGoal>"
  '((:COMMAND_UNKNOWN . 0)
    (:COMMAND_SWITCH_PIPELINE . 1)
    (:COMMAND_RESET_FILTER . 2)
    (:COMMAND_ESTIMATE_BIAS . 3)
    (:PIPELINE_NONE . no)
    (:PIPELINE_MAP_LANDMARKS . ml)
    (:PIPELINE_AR_TAGS . ar)
    (:PIPELINE_HANDRAIL . hr)
    (:PIPELINE_PERCH . pl)
    (:PIPELINE_TRUTH . gt))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'LocalizationGoal)))
    "Constants for message type 'LocalizationGoal"
  '((:COMMAND_UNKNOWN . 0)
    (:COMMAND_SWITCH_PIPELINE . 1)
    (:COMMAND_RESET_FILTER . 2)
    (:COMMAND_ESTIMATE_BIAS . 3)
    (:PIPELINE_NONE . no)
    (:PIPELINE_MAP_LANDMARKS . ml)
    (:PIPELINE_AR_TAGS . ar)
    (:PIPELINE_HANDRAIL . hr)
    (:PIPELINE_PERCH . pl)
    (:PIPELINE_TRUTH . gt))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <LocalizationGoal>) ostream)
  "Serializes a message object of type '<LocalizationGoal>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'command)) ostream)
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'pipeline))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'pipeline))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <LocalizationGoal>) istream)
  "Deserializes a message object of type '<LocalizationGoal>"
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'command)) (cl:read-byte istream))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'pipeline) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'pipeline) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<LocalizationGoal>)))
  "Returns string type for a message object of type '<LocalizationGoal>"
  "ff_msgs/LocalizationGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'LocalizationGoal)))
  "Returns string type for a message object of type 'LocalizationGoal"
  "ff_msgs/LocalizationGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<LocalizationGoal>)))
  "Returns md5sum for a message object of type '<LocalizationGoal>"
  "c0c7a19dd56355e91730acab7d72318e")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'LocalizationGoal)))
  "Returns md5sum for a message object of type 'LocalizationGoal"
  "c0c7a19dd56355e91730acab7d72318e")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<LocalizationGoal>)))
  "Returns full string definition for message of type '<LocalizationGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# This message is the LOCALIZATION action offered by the LOCALIZATION_MANAGER~%~%uint8 command~%uint8 COMMAND_UNKNOWN             = 0       # Protect against empty message~%uint8 COMMAND_SWITCH_PIPELINE     = 1       # Switch localization pipeline~%uint8 COMMAND_RESET_FILTER        = 2       # Reset the filter~%uint8 COMMAND_ESTIMATE_BIAS       = 3       # Estimate the bias~%~%string pipeline                             # Only needed for switch pipeline~%string PIPELINE_NONE              = no~%string PIPELINE_MAP_LANDMARKS     = ml~%string PIPELINE_AR_TAGS           = ar~%string PIPELINE_HANDRAIL          = hr~%string PIPELINE_PERCH             = pl~%string PIPELINE_TRUTH             = gt~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'LocalizationGoal)))
  "Returns full string definition for message of type 'LocalizationGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# This message is the LOCALIZATION action offered by the LOCALIZATION_MANAGER~%~%uint8 command~%uint8 COMMAND_UNKNOWN             = 0       # Protect against empty message~%uint8 COMMAND_SWITCH_PIPELINE     = 1       # Switch localization pipeline~%uint8 COMMAND_RESET_FILTER        = 2       # Reset the filter~%uint8 COMMAND_ESTIMATE_BIAS       = 3       # Estimate the bias~%~%string pipeline                             # Only needed for switch pipeline~%string PIPELINE_NONE              = no~%string PIPELINE_MAP_LANDMARKS     = ml~%string PIPELINE_AR_TAGS           = ar~%string PIPELINE_HANDRAIL          = hr~%string PIPELINE_PERCH             = pl~%string PIPELINE_TRUTH             = gt~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <LocalizationGoal>))
  (cl:+ 0
     1
     4 (cl:length (cl:slot-value msg 'pipeline))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <LocalizationGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'LocalizationGoal
    (cl:cons ':command (command msg))
    (cl:cons ':pipeline (pipeline msg))
))
