; Auto-generated. Do not edit!


(cl:in-package ff_msgs-msg)


;//! \htmlinclude LocalizationFeedback.msg.html

(cl:defclass <LocalizationFeedback> (roslisp-msg-protocol:ros-message)
  ((state
    :reader state
    :initarg :state
    :type ff_msgs-msg:LocalizationState
    :initform (cl:make-instance 'ff_msgs-msg:LocalizationState)))
)

(cl:defclass LocalizationFeedback (<LocalizationFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <LocalizationFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'LocalizationFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name ff_msgs-msg:<LocalizationFeedback> is deprecated: use ff_msgs-msg:LocalizationFeedback instead.")))

(cl:ensure-generic-function 'state-val :lambda-list '(m))
(cl:defmethod state-val ((m <LocalizationFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ff_msgs-msg:state-val is deprecated.  Use ff_msgs-msg:state instead.")
  (state m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <LocalizationFeedback>) ostream)
  "Serializes a message object of type '<LocalizationFeedback>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'state) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <LocalizationFeedback>) istream)
  "Deserializes a message object of type '<LocalizationFeedback>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'state) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<LocalizationFeedback>)))
  "Returns string type for a message object of type '<LocalizationFeedback>"
  "ff_msgs/LocalizationFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'LocalizationFeedback)))
  "Returns string type for a message object of type 'LocalizationFeedback"
  "ff_msgs/LocalizationFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<LocalizationFeedback>)))
  "Returns md5sum for a message object of type '<LocalizationFeedback>"
  "9a8c4aa9ea2bc31b1a056756dbbcdb96")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'LocalizationFeedback)))
  "Returns md5sum for a message object of type 'LocalizationFeedback"
  "9a8c4aa9ea2bc31b1a056756dbbcdb96")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<LocalizationFeedback>)))
  "Returns full string definition for message of type '<LocalizationFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Feedback~%ff_msgs/LocalizationState state~%~%~%================================================================================~%MSG: ff_msgs/LocalizationState~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# The state of the localization system~%~%# Header with timestamp~%std_msgs/Header header~%~%# Tee current state~%int32 state                                 # Current state~%int32 INITIALIZING                    = 0   # Waiting on dependencies~%int32 DISABLED                        = 1   # Localization disabled~%int32 LOCALIZING                      = 2   # Localization enabled~%int32 SWITCH_WAITING_FOR_PIPELINE     = 3   # Waiting for pipeline to stabilize~%int32 SWITCH_WAITING_FOR_FILTER       = 4   # Waiting for filter to stabilize~%int32 BIAS_WAITING_FOR_FILTER         = 5   # Waiting for bias estimation~%int32 RESET_WAITING_FOR_FILTER        = 6   # Waiting for EKF stability~%int32 UNSTABLE                        = 7   # Fallback pipeline unstable~%~%# A human readable version of the (event) -> [state] transition~%string fsm_event~%string fsm_state~%~%# The current localization pipeline being used~%ff_msgs/LocalizationPipeline pipeline~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: ff_msgs/LocalizationPipeline~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# Information about a pipeline~%~%string id                     # Short id for the pipeline~%uint8 mode                    # EKF mode for the pipeline~%string name                   # Long name for the pipe~%bool requires_filter          # Does this pipeline require the EKF~%bool requires_optical_flow    # Does this pipeline require optical flow~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'LocalizationFeedback)))
  "Returns full string definition for message of type 'LocalizationFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Feedback~%ff_msgs/LocalizationState state~%~%~%================================================================================~%MSG: ff_msgs/LocalizationState~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# The state of the localization system~%~%# Header with timestamp~%std_msgs/Header header~%~%# Tee current state~%int32 state                                 # Current state~%int32 INITIALIZING                    = 0   # Waiting on dependencies~%int32 DISABLED                        = 1   # Localization disabled~%int32 LOCALIZING                      = 2   # Localization enabled~%int32 SWITCH_WAITING_FOR_PIPELINE     = 3   # Waiting for pipeline to stabilize~%int32 SWITCH_WAITING_FOR_FILTER       = 4   # Waiting for filter to stabilize~%int32 BIAS_WAITING_FOR_FILTER         = 5   # Waiting for bias estimation~%int32 RESET_WAITING_FOR_FILTER        = 6   # Waiting for EKF stability~%int32 UNSTABLE                        = 7   # Fallback pipeline unstable~%~%# A human readable version of the (event) -> [state] transition~%string fsm_event~%string fsm_state~%~%# The current localization pipeline being used~%ff_msgs/LocalizationPipeline pipeline~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: ff_msgs/LocalizationPipeline~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# Information about a pipeline~%~%string id                     # Short id for the pipeline~%uint8 mode                    # EKF mode for the pipeline~%string name                   # Long name for the pipe~%bool requires_filter          # Does this pipeline require the EKF~%bool requires_optical_flow    # Does this pipeline require optical flow~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <LocalizationFeedback>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'state))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <LocalizationFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'LocalizationFeedback
    (cl:cons ':state (state msg))
))
