; Auto-generated. Do not edit!


(cl:in-package ff_msgs-msg)


;//! \htmlinclude PerchFeedback.msg.html

(cl:defclass <PerchFeedback> (roslisp-msg-protocol:ros-message)
  ((state
    :reader state
    :initarg :state
    :type ff_msgs-msg:PerchState
    :initform (cl:make-instance 'ff_msgs-msg:PerchState)))
)

(cl:defclass PerchFeedback (<PerchFeedback>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <PerchFeedback>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'PerchFeedback)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name ff_msgs-msg:<PerchFeedback> is deprecated: use ff_msgs-msg:PerchFeedback instead.")))

(cl:ensure-generic-function 'state-val :lambda-list '(m))
(cl:defmethod state-val ((m <PerchFeedback>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ff_msgs-msg:state-val is deprecated.  Use ff_msgs-msg:state instead.")
  (state m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <PerchFeedback>) ostream)
  "Serializes a message object of type '<PerchFeedback>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'state) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <PerchFeedback>) istream)
  "Deserializes a message object of type '<PerchFeedback>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'state) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<PerchFeedback>)))
  "Returns string type for a message object of type '<PerchFeedback>"
  "ff_msgs/PerchFeedback")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'PerchFeedback)))
  "Returns string type for a message object of type 'PerchFeedback"
  "ff_msgs/PerchFeedback")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<PerchFeedback>)))
  "Returns md5sum for a message object of type '<PerchFeedback>"
  "ce91b2c26500c663aeec651c3bf03ceb")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'PerchFeedback)))
  "Returns md5sum for a message object of type 'PerchFeedback"
  "ce91b2c26500c663aeec651c3bf03ceb")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<PerchFeedback>)))
  "Returns full string definition for message of type '<PerchFeedback>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Feedback~%ff_msgs/PerchState state~%~%~%================================================================================~%MSG: ff_msgs/PerchState~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# The state of the perching system~%~%# Header with timestamp~%std_msgs/Header header~%~%# Feedback~%int8 state~%~%int8 RECOVERY_MOVING_TO_RECOVERY_POSE   = 18~%int8 RECOVERY_SWITCHING_TO_ML_LOC       = 17~%int8 RECOVERY_STOWING_ARM               = 16~%int8 RECOVERY_MOVING_TO_APPROACH_POSE   = 15~%int8 RECOVERY_OPENING_GRIPPER           = 14~%int8 INITIALIZING                       = 13~%int8 UNKNOWN                            = 12~%# Used to check the perching/unperching ranges~%int8 PERCHING_MAX_STATE                 = 11~%int8 PERCHING_SWITCHING_TO_HR_LOC       = 11~%int8 PERCHING_MOVING_TO_APPROACH_POSE   = 10~%int8 PERCHING_ENSURING_APPROACH_POSE    = 9~%int8 PERCHING_DEPLOYING_ARM             = 8~%int8 PERCHING_OPENING_GRIPPER           = 7~%int8 PERCHING_MOVING_TO_COMPLETE_POSE   = 6~%int8 PERCHING_CLOSING_GRIPPER           = 5~%int8 PERCHING_CHECKING_ATTACHED         = 4~%int8 PERCHING_WAITING_FOR_SPIN_DOWN     = 3~%int8 PERCHING_SWITCHING_TO_PL_LOC       = 2~%int8 PERCHING_STOPPING                  = 1~%int8 PERCHED                            = 0~%int8 UNPERCHING_SWITCHING_TO_HR_LOC     = -1~%int8 UNPERCHING_WAITING_FOR_SPIN_UP     = -2~%int8 UNPERCHING_OPENING_GRIPPER         = -3~%int8 UNPERCHING_MOVING_TO_APPROACH_POSE = -4~%int8 UNPERCHING_STOWING_ARM             = -5~%int8 UNPERCHING_SWITCHING_TO_ML_LOC     = -6~%int8 UNPERCHED                          = -7~%# Used to check the perching/unperching ranges~%int8 UNPERCHING_MAX_STATE               = -7~%~%# A human readable version of the (event) -> [state] transition~%string fsm_event~%string fsm_state~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'PerchFeedback)))
  "Returns full string definition for message of type 'PerchFeedback"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Feedback~%ff_msgs/PerchState state~%~%~%================================================================================~%MSG: ff_msgs/PerchState~%# Copyright (c) 2017, United States Government, as represented by the~%# Administrator of the National Aeronautics and Space Administration.~%#~%# All rights reserved.~%#~%# The Astrobee platform is licensed under the Apache License, Version 2.0~%# (the \"License\"); you may not use this file except in compliance with the~%# License. You may obtain a copy of the License at~%#~%#     http://www.apache.org/licenses/LICENSE-2.0~%#~%# Unless required by applicable law or agreed to in writing, software~%# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT~%# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the~%# License for the specific language governing permissions and limitations~%# under the License.~%#~%# The state of the perching system~%~%# Header with timestamp~%std_msgs/Header header~%~%# Feedback~%int8 state~%~%int8 RECOVERY_MOVING_TO_RECOVERY_POSE   = 18~%int8 RECOVERY_SWITCHING_TO_ML_LOC       = 17~%int8 RECOVERY_STOWING_ARM               = 16~%int8 RECOVERY_MOVING_TO_APPROACH_POSE   = 15~%int8 RECOVERY_OPENING_GRIPPER           = 14~%int8 INITIALIZING                       = 13~%int8 UNKNOWN                            = 12~%# Used to check the perching/unperching ranges~%int8 PERCHING_MAX_STATE                 = 11~%int8 PERCHING_SWITCHING_TO_HR_LOC       = 11~%int8 PERCHING_MOVING_TO_APPROACH_POSE   = 10~%int8 PERCHING_ENSURING_APPROACH_POSE    = 9~%int8 PERCHING_DEPLOYING_ARM             = 8~%int8 PERCHING_OPENING_GRIPPER           = 7~%int8 PERCHING_MOVING_TO_COMPLETE_POSE   = 6~%int8 PERCHING_CLOSING_GRIPPER           = 5~%int8 PERCHING_CHECKING_ATTACHED         = 4~%int8 PERCHING_WAITING_FOR_SPIN_DOWN     = 3~%int8 PERCHING_SWITCHING_TO_PL_LOC       = 2~%int8 PERCHING_STOPPING                  = 1~%int8 PERCHED                            = 0~%int8 UNPERCHING_SWITCHING_TO_HR_LOC     = -1~%int8 UNPERCHING_WAITING_FOR_SPIN_UP     = -2~%int8 UNPERCHING_OPENING_GRIPPER         = -3~%int8 UNPERCHING_MOVING_TO_APPROACH_POSE = -4~%int8 UNPERCHING_STOWING_ARM             = -5~%int8 UNPERCHING_SWITCHING_TO_ML_LOC     = -6~%int8 UNPERCHED                          = -7~%# Used to check the perching/unperching ranges~%int8 UNPERCHING_MAX_STATE               = -7~%~%# A human readable version of the (event) -> [state] transition~%string fsm_event~%string fsm_state~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <PerchFeedback>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'state))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <PerchFeedback>))
  "Converts a ROS message object to a list"
  (cl:list 'PerchFeedback
    (cl:cons ':state (state msg))
))
