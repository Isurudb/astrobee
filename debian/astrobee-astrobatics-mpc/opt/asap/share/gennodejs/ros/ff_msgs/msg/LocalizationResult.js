// Auto-generated. Do not edit!

// (in-package ff_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class LocalizationResult {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.response = null;
      this.fsm_result = null;
    }
    else {
      if (initObj.hasOwnProperty('response')) {
        this.response = initObj.response
      }
      else {
        this.response = 0;
      }
      if (initObj.hasOwnProperty('fsm_result')) {
        this.fsm_result = initObj.fsm_result
      }
      else {
        this.fsm_result = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type LocalizationResult
    // Serialize message field [response]
    bufferOffset = _serializer.int32(obj.response, buffer, bufferOffset);
    // Serialize message field [fsm_result]
    bufferOffset = _serializer.string(obj.fsm_result, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type LocalizationResult
    let len;
    let data = new LocalizationResult(null);
    // Deserialize message field [response]
    data.response = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [fsm_result]
    data.fsm_result = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.fsm_result.length;
    return length + 8;
  }

  static datatype() {
    // Returns string type for a message object
    return 'ff_msgs/LocalizationResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '309c1ead50fb170acfed9e9b67a66d27';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    
    int32 response
    int32 PIPELINE_ALREADY_ACTIVE     =  2   # We are already on this mode
    int32 SUCCESS                     =  1   # The switch was successful
    int32 PREEMPTED                   =  0   # Preempted by another action goal
    int32 CANCELLED                   = -1   # We canceled our own request
    int32 INVALID_PIPELINE            = -2   # Not a valid pipeline in command
    int32 INVALID_COMMAND             = -3   # Not a valid command type
    int32 FILTER_NOT_IN_USE           = -4   # Reset/bias requires filter
    int32 OPTICAL_FLOW_FAILED         = -5   # Optical flow could not be toggled
    int32 PIPELINE_TOGGLE_FAILED      = -6   # Pipeline could not be toggled
    int32 PIPELINE_USE_FAILED         = -7   # Pipeline could not be used
    int32 PIPELINE_UNSTABLE           = -8   # Pipeline did not go stable
    int32 SET_INPUT_FAILED            = -9   # EKF could not be set to new mode
    int32 ESTIMATE_BIAS_FAILED        = -10  # Estimate bias service call failed
    int32 RESET_FAILED                = -11  # Reset service call failed
    
    # Human readable FSM result for debugging
    string fsm_result
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new LocalizationResult(null);
    if (msg.response !== undefined) {
      resolved.response = msg.response;
    }
    else {
      resolved.response = 0
    }

    if (msg.fsm_result !== undefined) {
      resolved.fsm_result = msg.fsm_result;
    }
    else {
      resolved.fsm_result = ''
    }

    return resolved;
    }
};

// Constants for message
LocalizationResult.Constants = {
  PIPELINE_ALREADY_ACTIVE: 2,
  SUCCESS: 1,
  PREEMPTED: 0,
  CANCELLED: -1,
  INVALID_PIPELINE: -2,
  INVALID_COMMAND: -3,
  FILTER_NOT_IN_USE: -4,
  OPTICAL_FLOW_FAILED: -5,
  PIPELINE_TOGGLE_FAILED: -6,
  PIPELINE_USE_FAILED: -7,
  PIPELINE_UNSTABLE: -8,
  SET_INPUT_FAILED: -9,
  ESTIMATE_BIAS_FAILED: -10,
  RESET_FAILED: -11,
}

module.exports = LocalizationResult;
